name: DEVELOP-WORKFLOW

on:
  pull_request:
    types: [edited, opened, synchronize, closed]
  push:
    branches:
      - develop
  issue_comment:
    types: [created]

jobs:
    tag:
      name: Tag version
      if: ${{ github.event.pull_request.merged == true && github.ref == 'refs/heads/main' }}
      runs-on: ubuntu-latest
      outputs:
        version: ${{ steps.bump.outputs.version }}
        should_tag: ${{ steps.bump.outputs.should_tag }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        - name: Decide bump and next version
          id: bump
          run: |
            set -euo pipefail
  
            LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            COMMITS=$(git log --pretty=format:%s ${LAST_TAG}..HEAD || true)
  
            # Domyślnie: nie tagujemy, dopóki nie wykryjemy typu zmiany
            SHOULD_TAG=false
            BUMP=""
  
            if echo "$COMMITS" | grep -E 'BREAKING CHANGE|!:' -q; then
              BUMP="major"; SHOULD_TAG=true
            elif echo "$COMMITS" | grep -E '^feat(\(.+\))?:' -q; then
              BUMP="minor"; SHOULD_TAG=true
            elif echo "$COMMITS" | grep -E '^fix(\(.+\))?:' -q; then
              BUMP="patch"; SHOULD_TAG=true
            fi
  
            echo "should_tag=${SHOULD_TAG}" >> "$GITHUB_OUTPUT"
  
            if [ "$SHOULD_TAG" != "true" ]; then
              echo "Brak feat/fix/BREAKING – pomijam tagowanie."
              exit 0
            fi
  
            CUR=${LAST_TAG#v}
            IFS='.' read -r MAJ MIN PAT <<< "$CUR"
  
            case "$BUMP" in
              major) MAJ=$((MAJ+1)); MIN=0; PAT=0 ;;
              minor) MIN=$((MIN+1)); PAT=0 ;;
              patch) PAT=$((PAT+1)) ;;
            esac
  
            NEW="v${MAJ}.${MIN}.${PAT}"
            echo "version=${NEW#v}"   >> "$GITHUB_OUTPUT"
            echo "new_tag=$NEW"       >> "$GITHUB_OUTPUT"
  
        - name: Create & push git tag (only when needed)
          if: steps.bump.outputs.should_tag == 'true'
          run: |
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "${{ steps.bump.outputs.new_tag }}"
            git push origin "${{ steps.bump.outputs.new_tag }}"
