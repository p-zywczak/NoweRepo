name: Sync .env.example -> Vault

on:
  push:
    branches:
      - 'main'

jobs:
  changed:
    name: Check modify .env.example
    runs-on: ubuntu-latest
    outputs:
      env_changed: ${{ steps.filter.outputs.env_example }}
    steps:
      - uses: actions/checkout@v3
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            env_example:
              - '.env.example'

  sync-env:
    name: Sync .env.example with VAULT
    runs-on: ubuntu-latest
    needs: changed
    if: ${{ needs.changed.outputs.env_changed == 'true' }}
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
      VAULT_AUTH_PATH: auth/approle
      VAULT_PATH: ${{ secrets.VAULT_PATH }}
      ENV_FILE: .env.example
    steps:
      - uses: actions/checkout@v3

      - name: Mask secrets
        run: |
          echo "::add-mask::${VAULT_ROLE_ID}"
          echo "::add-mask::${VAULT_SECRET_ID}"

      - name: Install Vault CLI & jq
        run: |
          sudo apt-get update && sudo apt-get install -y jq unzip
          curl -fsSL https://releases.hashicorp.com/vault/1.17.5/vault_1.17.5_linux_amd64.zip -o vault.zip
          unzip vault.zip && sudo install -m 0755 vault /usr/local/bin/vault

      - name: Sync to Vault
        run: |
          chmod +x scripts/sync-env-to-vault.sh
          ./scripts/sync-env-to-vault.sh "$VAULT_PATH" "$ENV_FILE"
